package test_18;

import java.awt.Container;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.SwingConstants;

public class OverUnder extends JFrame{
	
	private int round = 1;
	private int rand1, rand2, rand3, rand4;
	private JLabel label1, label2, label3, label4, orLabel, winOrLose;
	private JButton higher, lower;
	private JMenuBar jMenuBar;
	private JMenu jMenu;
	private JMenuItem reset, exit;
	
	
	public OverUnder() {
		setLayout(new GridLayout(3, 1));
		
		rand1 = (int)(Math.random() * 20 + 1);
		
		Font font = new Font("Serif", Font.BOLD, 16);
		
		jMenuBar = new JMenuBar();
		setJMenuBar(jMenuBar);
		
		jMenu = new JMenu("File");
		jMenuBar.add(jMenu);
		
		reset = new JMenuItem("Reset");
		jMenu.add(reset);
		
		exit = new JMenuItem("Exit");
		jMenu.add(exit);
		
		HandlerRestartGame handlerRestartGame = new HandlerRestartGame();
		reset.addActionListener(handlerRestartGame);
		
		HandlerSystemClose handlerSystemClose = new HandlerSystemClose();
		exit.addActionListener(handlerSystemClose);
		
		/*
		 * using Container object to set up layout
		 */
		Container container = this.getContentPane();
		
		// top panel set up
		JPanel top = new JPanel();
		top.setLayout(new GridLayout(1, 4));
		
		label1 = new JLabel("" + rand1, SwingConstants.CENTER);
		label1.setFont(font);
		top.add(label1);
		
		label2 = new JLabel("", SwingConstants.CENTER);
		label2.setFont(font);
		top.add(label2);
		
		label3 = new JLabel("", SwingConstants.CENTER);
		label3.setFont(font);
		top.add(label3);
		
		label4 = new JLabel("", SwingConstants.CENTER);
		label4.setFont(font);
		top.add(label4);
		
		container.add(top);
		
		JPanel middle = new JPanel();
		middle.setLayout(new GridLayout(1, 3));
		
		higher = new JButton("Higher");
		middle.add(higher);
		
		orLabel = new JLabel("Or");
		middle.add(comp)
		
		lower = new JButton("Lower");
		
		
		
		
	}
	
	private class HandlerRestartGame implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			// TODO Auto-generated method stub
			
		}
	}
	
	private class HandlerSystemClose implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			// TODO Auto-generated method stub
			
		}
	}
	
	
	public static void main(String[] args) {
		
		OverUnder overUnder = new OverUnder();
		overUnder.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		overUnder.setSize(400, 400);
		overUnder.setVisible(true);
		overUnder.setTitle("The title");
	}
}
